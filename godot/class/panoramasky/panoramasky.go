package panoramasky

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"

	"github.com/shadowapex/godot-go/godot/class/sky"
	"github.com/shadowapex/godot-go/godot/class/texture"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewPanoramaSkyFromPointer(ptr gdnative.Pointer) *PanoramaSky {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := PanoramaSky{}
	obj.SetOwner(owner)

	return &obj

}

/*

 */
type PanoramaSky struct {
	sky.Sky
}

func (o *PanoramaSky) BaseClass() string {
	return "PanoramaSky"
}

/*
        Undocumented
	Args: [], Returns: Texture
*/

func (o *PanoramaSky) GetPanorama() texture.Texture {
	log.Println("Calling PanoramaSky.GetPanorama()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PanoramaSky", "get_panorama")

	// Call the parent method.
	// Texture
	retPtr := texture.NewEmptyTexture()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := texture.NewTextureFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false texture Texture}], Returns: void
*/

func (o *PanoramaSky) SetPanorama(texture texture.Texture) {
	log.Println("Calling PanoramaSky.SetPanorama()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(texture.GetOwner())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PanoramaSky", "set_panorama")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
