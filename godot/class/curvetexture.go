package class

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewCurveTextureFromPointer(ptr gdnative.Pointer) CurveTexture {
func NewCurveTextureFromPointer(ptr gdnative.Pointer) CurveTexture {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := CurveTexture{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Renders a given [Curve] provided to it. Simplifies the task of drawing curves and/or saving them as image files.
*/
type CurveTexture struct {
	Texture
	owner gdnative.Object
}

func (o *CurveTexture) BaseClass() string {
	return "CurveTexture"
}

// SetBaseObject will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *CurveTexture) SetBaseObject(object gdnative.Object) {
	o.owner = object
}

func (o *CurveTexture) GetBaseObject() gdnative.Object {
	return o.owner
}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *CurveTexture) X_Update() {
	log.Println("Calling CurveTexture.X_Update()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CurveTexture", "_update")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: Curve
*/
func (o *CurveTexture) GetCurve() Curve {
	log.Println("Calling CurveTexture.GetCurve()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CurveTexture", "get_curve")

	// Call the parent method.
	// Curve
	retPtr := gdnative.NewEmptyObject()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := NewCurveFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false curve Curve}], Returns: void
*/
func (o *CurveTexture) SetCurve(curve Curve) {
	log.Println("Calling CurveTexture.SetCurve()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(curve.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CurveTexture", "set_curve")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false width int}], Returns: void
*/
func (o *CurveTexture) SetWidth(width gdnative.Int) {
	log.Println("Calling CurveTexture.SetWidth()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(width)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("CurveTexture", "set_width")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
