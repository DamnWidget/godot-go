package menubutton

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Special button that brings up a [PopupMenu] when clicked. That's pretty much all it does, as it's just a helper class when building GUIs.
*/
type MenuButton struct {
	Button
}

func (o *MenuButton) BaseClass() string {
	return "MenuButton"
}

/*
   Undocumented
*/
func (o *MenuButton) X_GetItems() *Array {
	log.Println("Calling MenuButton.X_GetItems()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "_get_items", goArguments, "*Array")

	returnValue := goRet.Interface().(*Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *MenuButton) X_SetItems(arg0 *Array) {
	log.Println("Calling MenuButton.X_SetItems()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(arg0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_set_items", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *MenuButton) X_UnhandledKeyInput(arg0 *InputEvent) {
	log.Println("Calling MenuButton.X_UnhandledKeyInput()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(arg0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_unhandled_key_input", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Return the [PopupMenu] contained in this button.
*/
func (o *MenuButton) GetPopup() *PopupMenu {
	log.Println("Calling MenuButton.GetPopup()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_popup", goArguments, "*PopupMenu")

	returnValue := goRet.Interface().(*PopupMenu)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *MenuButton) SetDisableShortcuts(disabled gdnative.Bool) {
	log.Println("Calling MenuButton.SetDisableShortcuts()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(disabled)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_disable_shortcuts", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   MenuButtonImplementer is an interface for MenuButton objects.
*/
type MenuButtonImplementer interface {
	Class
}
