package audioeffect

import (
	"log"
	"reflect"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Adds a chorus audio effect. The effect applies a filter with voices to duplicate the audio source and manipulate it through the filter.
*/
type AudioEffectChorus struct {
	AudioEffect
}

func (o *AudioEffectChorus) BaseClass() string {
	return "AudioEffectChorus"
}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetDry() gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetDry()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_dry", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetVoiceCount() gdnative.Int {
	log.Println("Calling AudioEffectChorus.GetVoiceCount()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_voice_count", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetVoiceCutoffHz(voiceIdx gdnative.Int) gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetVoiceCutoffHz()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(voiceIdx)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_voice_cutoff_hz", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetVoiceDelayMs(voiceIdx gdnative.Int) gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetVoiceDelayMs()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(voiceIdx)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_voice_delay_ms", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetVoiceDepthMs(voiceIdx gdnative.Int) gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetVoiceDepthMs()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(voiceIdx)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_voice_depth_ms", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetVoiceLevelDb(voiceIdx gdnative.Int) gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetVoiceLevelDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(voiceIdx)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_voice_level_db", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetVoicePan(voiceIdx gdnative.Int) gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetVoicePan()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(voiceIdx)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_voice_pan", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetVoiceRateHz(voiceIdx gdnative.Int) gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetVoiceRateHz()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(voiceIdx)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_voice_rate_hz", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) GetWet() gdnative.Float {
	log.Println("Calling AudioEffectChorus.GetWet()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_wet", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetDry(amount gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetDry()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(amount)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_dry", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetVoiceCount(voices gdnative.Int) {
	log.Println("Calling AudioEffectChorus.SetVoiceCount()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(voices)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_voice_count", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetVoiceCutoffHz(voiceIdx gdnative.Int, cutoffHz gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetVoiceCutoffHz()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(voiceIdx)
	goArguments[1] = reflect.ValueOf(cutoffHz)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_voice_cutoff_hz", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetVoiceDelayMs(voiceIdx gdnative.Int, delayMs gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetVoiceDelayMs()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(voiceIdx)
	goArguments[1] = reflect.ValueOf(delayMs)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_voice_delay_ms", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetVoiceDepthMs(voiceIdx gdnative.Int, depthMs gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetVoiceDepthMs()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(voiceIdx)
	goArguments[1] = reflect.ValueOf(depthMs)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_voice_depth_ms", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetVoiceLevelDb(voiceIdx gdnative.Int, levelDb gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetVoiceLevelDb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(voiceIdx)
	goArguments[1] = reflect.ValueOf(levelDb)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_voice_level_db", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetVoicePan(voiceIdx gdnative.Int, pan gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetVoicePan()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(voiceIdx)
	goArguments[1] = reflect.ValueOf(pan)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_voice_pan", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetVoiceRateHz(voiceIdx gdnative.Int, rateHz gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetVoiceRateHz()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(voiceIdx)
	goArguments[1] = reflect.ValueOf(rateHz)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_voice_rate_hz", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioEffectChorus) SetWet(amount gdnative.Float) {
	log.Println("Calling AudioEffectChorus.SetWet()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(amount)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_wet", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   AudioEffectChorusImplementer is an interface for AudioEffectChorus objects.
*/
type AudioEffectChorusImplementer interface {
	Class
}
