package class

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewGIProbeDataFromPointer(ptr gdnative.Pointer) GIProbeData {
func NewGIProbeDataFromPointer(ptr gdnative.Pointer) GIProbeData {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := GIProbeData{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type GIProbeData struct {
	Resource
	owner gdnative.Object
}

func (o *GIProbeData) BaseClass() string {
	return "GIProbeData"
}

// SetBaseObject will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *GIProbeData) SetBaseObject(object gdnative.Object) {
	o.owner = object
}

func (o *GIProbeData) GetBaseObject() gdnative.Object {
	return o.owner
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *GIProbeData) GetBias() gdnative.Float {
	log.Println("Calling GIProbeData.GetBias()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_bias")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: AABB
*/
func (o *GIProbeData) GetBounds() gdnative.Aabb {
	log.Println("Calling GIProbeData.GetBounds()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_bounds")

	// Call the parent method.
	// AABB
	retPtr := gdnative.NewEmptyAabb()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewAabbFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *GIProbeData) GetCellSize() gdnative.Float {
	log.Println("Calling GIProbeData.GetCellSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_cell_size")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: PoolIntArray
*/
func (o *GIProbeData) GetDynamicData() gdnative.PoolIntArray {
	log.Println("Calling GIProbeData.GetDynamicData()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_dynamic_data")

	// Call the parent method.
	// PoolIntArray
	retPtr := gdnative.NewEmptyPoolIntArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewPoolIntArrayFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *GIProbeData) GetDynamicRange() gdnative.Int {
	log.Println("Calling GIProbeData.GetDynamicRange()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_dynamic_range")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *GIProbeData) GetEnergy() gdnative.Float {
	log.Println("Calling GIProbeData.GetEnergy()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_energy")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *GIProbeData) GetNormalBias() gdnative.Float {
	log.Println("Calling GIProbeData.GetNormalBias()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_normal_bias")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *GIProbeData) GetPropagation() gdnative.Float {
	log.Println("Calling GIProbeData.GetPropagation()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_propagation")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Transform
*/
func (o *GIProbeData) GetToCellXform() gdnative.Transform {
	log.Println("Calling GIProbeData.GetToCellXform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "get_to_cell_xform")

	// Call the parent method.
	// Transform
	retPtr := gdnative.NewEmptyTransform()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewTransformFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *GIProbeData) IsCompressed() gdnative.Bool {
	log.Println("Calling GIProbeData.IsCompressed()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "is_compressed")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *GIProbeData) IsInterior() gdnative.Bool {
	log.Println("Calling GIProbeData.IsInterior()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "is_interior")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false bias float}], Returns: void
*/
func (o *GIProbeData) SetBias(bias gdnative.Float) {
	log.Println("Calling GIProbeData.SetBias()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(bias)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_bias")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false bounds AABB}], Returns: void
*/
func (o *GIProbeData) SetBounds(bounds gdnative.Aabb) {
	log.Println("Calling GIProbeData.SetBounds()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromAabb(bounds)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_bounds")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false cell_size float}], Returns: void
*/
func (o *GIProbeData) SetCellSize(cellSize gdnative.Float) {
	log.Println("Calling GIProbeData.SetCellSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(cellSize)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_cell_size")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false compress bool}], Returns: void
*/
func (o *GIProbeData) SetCompress(compress gdnative.Bool) {
	log.Println("Calling GIProbeData.SetCompress()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(compress)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_compress")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false dynamic_data PoolIntArray}], Returns: void
*/
func (o *GIProbeData) SetDynamicData(dynamicData gdnative.PoolIntArray) {
	log.Println("Calling GIProbeData.SetDynamicData()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromPoolIntArray(dynamicData)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_dynamic_data")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false dynamic_range int}], Returns: void
*/
func (o *GIProbeData) SetDynamicRange(dynamicRange gdnative.Int) {
	log.Println("Calling GIProbeData.SetDynamicRange()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(dynamicRange)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_dynamic_range")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false energy float}], Returns: void
*/
func (o *GIProbeData) SetEnergy(energy gdnative.Float) {
	log.Println("Calling GIProbeData.SetEnergy()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(energy)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_energy")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false interior bool}], Returns: void
*/
func (o *GIProbeData) SetInterior(interior gdnative.Bool) {
	log.Println("Calling GIProbeData.SetInterior()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(interior)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_interior")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false bias float}], Returns: void
*/
func (o *GIProbeData) SetNormalBias(bias gdnative.Float) {
	log.Println("Calling GIProbeData.SetNormalBias()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(bias)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_normal_bias")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false propagation float}], Returns: void
*/
func (o *GIProbeData) SetPropagation(propagation gdnative.Float) {
	log.Println("Calling GIProbeData.SetPropagation()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(propagation)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_propagation")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false to_cell_xform Transform}], Returns: void
*/
func (o *GIProbeData) SetToCellXform(toCellXform gdnative.Transform) {
	log.Println("Calling GIProbeData.SetToCellXform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromTransform(toCellXform)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("GIProbeData", "set_to_cell_xform")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
