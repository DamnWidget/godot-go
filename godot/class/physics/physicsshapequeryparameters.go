package physics

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"

	"github.com/shadowapex/godot-go/godot/class/reference"
	"github.com/shadowapex/godot-go/godot/class/resource"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewPhysicsShapeQueryParametersFromPointer(ptr gdnative.Pointer) *PhysicsShapeQueryParameters {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := PhysicsShapeQueryParameters{}
	obj.SetOwner(owner)

	return &obj

}

/*

 */
type PhysicsShapeQueryParameters struct {
	reference.Reference
}

func (o *PhysicsShapeQueryParameters) BaseClass() string {
	return "PhysicsShapeQueryParameters"
}

/*
        Undocumented
	Args: [], Returns: int
*/

func (o *PhysicsShapeQueryParameters) GetCollisionMask() gdnative.Int {
	log.Println("Calling PhysicsShapeQueryParameters.GetCollisionMask()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_collision_mask")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Array
*/

func (o *PhysicsShapeQueryParameters) GetExclude() gdnative.Array {
	log.Println("Calling PhysicsShapeQueryParameters.GetExclude()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_exclude")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/

func (o *PhysicsShapeQueryParameters) GetMargin() gdnative.Float {
	log.Println("Calling PhysicsShapeQueryParameters.GetMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_margin")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: RID
*/

func (o *PhysicsShapeQueryParameters) GetShapeRid() gdnative.RID {
	log.Println("Calling PhysicsShapeQueryParameters.GetShapeRid()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_shape_rid")

	// Call the parent method.
	// RID
	retPtr := gdnative.NewEmptyRid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRidFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Transform
*/

func (o *PhysicsShapeQueryParameters) GetTransform() gdnative.Transform {
	log.Println("Calling PhysicsShapeQueryParameters.GetTransform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "get_transform")

	// Call the parent method.
	// Transform
	retPtr := gdnative.NewEmptyTransform()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewTransformFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false collision_mask int}], Returns: void
*/

func (o *PhysicsShapeQueryParameters) SetCollisionMask(collisionMask gdnative.Int) {
	log.Println("Calling PhysicsShapeQueryParameters.SetCollisionMask()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(collisionMask)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_collision_mask")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false exclude Array}], Returns: void
*/

func (o *PhysicsShapeQueryParameters) SetExclude(exclude gdnative.Array) {
	log.Println("Calling PhysicsShapeQueryParameters.SetExclude()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromArray(exclude)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_exclude")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false margin float}], Returns: void
*/

func (o *PhysicsShapeQueryParameters) SetMargin(margin gdnative.Float) {
	log.Println("Calling PhysicsShapeQueryParameters.SetMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(margin)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_margin")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*

	Args: [{ false shape Resource}], Returns: void
*/

func (o *PhysicsShapeQueryParameters) SetShape(shape resource.Resource) {
	log.Println("Calling PhysicsShapeQueryParameters.SetShape()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(shape.GetOwner())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_shape")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false shape RID}], Returns: void
*/

func (o *PhysicsShapeQueryParameters) SetShapeRid(shape gdnative.RID) {
	log.Println("Calling PhysicsShapeQueryParameters.SetShapeRid()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromRid(shape)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_shape_rid")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false transform Transform}], Returns: void
*/

func (o *PhysicsShapeQueryParameters) SetTransform(transform gdnative.Transform) {
	log.Println("Calling PhysicsShapeQueryParameters.SetTransform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromTransform(transform)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("PhysicsShapeQueryParameters", "set_transform")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
