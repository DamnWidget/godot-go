package physics

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"

	"github.com/shadowapex/godot-go/godot/class/reference"
	"github.com/shadowapex/godot-go/godot/class/resource"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewPhysics2DShapeQueryParametersFromPointer(ptr gdnative.Pointer) *Physics2DShapeQueryParameters {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := Physics2DShapeQueryParameters{}
	obj.SetOwner(owner)

	return &obj

}

/*
This class contains the shape and other parameters for intersection/collision queries.
*/
type Physics2DShapeQueryParameters struct {
	reference.Reference
}

func (o *Physics2DShapeQueryParameters) BaseClass() string {
	return "Physics2DShapeQueryParameters"
}

/*
        Undocumented
	Args: [], Returns: int
*/

func (o *Physics2DShapeQueryParameters) GetCollisionLayer() gdnative.Int {
	log.Println("Calling Physics2DShapeQueryParameters.GetCollisionLayer()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "get_collision_layer")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Array
*/

func (o *Physics2DShapeQueryParameters) GetExclude() gdnative.Array {
	log.Println("Calling Physics2DShapeQueryParameters.GetExclude()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "get_exclude")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/

func (o *Physics2DShapeQueryParameters) GetMargin() gdnative.Float {
	log.Println("Calling Physics2DShapeQueryParameters.GetMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "get_margin")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Vector2
*/

func (o *Physics2DShapeQueryParameters) GetMotion() gdnative.Vector2 {
	log.Println("Calling Physics2DShapeQueryParameters.GetMotion()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "get_motion")

	// Call the parent method.
	// Vector2
	retPtr := gdnative.NewEmptyVector2()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector2FromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: RID
*/

func (o *Physics2DShapeQueryParameters) GetShapeRid() gdnative.RID {
	log.Println("Calling Physics2DShapeQueryParameters.GetShapeRid()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "get_shape_rid")

	// Call the parent method.
	// RID
	retPtr := gdnative.NewEmptyRid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewRidFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: Transform2D
*/

func (o *Physics2DShapeQueryParameters) GetTransform() gdnative.Transform2D {
	log.Println("Calling Physics2DShapeQueryParameters.GetTransform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "get_transform")

	// Call the parent method.
	// Transform2D
	retPtr := gdnative.NewEmptyTransform2D()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewTransform2DFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false collision_layer int}], Returns: void
*/

func (o *Physics2DShapeQueryParameters) SetCollisionLayer(collisionLayer gdnative.Int) {
	log.Println("Calling Physics2DShapeQueryParameters.SetCollisionLayer()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(collisionLayer)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "set_collision_layer")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false exclude Array}], Returns: void
*/

func (o *Physics2DShapeQueryParameters) SetExclude(exclude gdnative.Array) {
	log.Println("Calling Physics2DShapeQueryParameters.SetExclude()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromArray(exclude)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "set_exclude")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false margin float}], Returns: void
*/

func (o *Physics2DShapeQueryParameters) SetMargin(margin gdnative.Float) {
	log.Println("Calling Physics2DShapeQueryParameters.SetMargin()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(margin)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "set_margin")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false motion Vector2}], Returns: void
*/

func (o *Physics2DShapeQueryParameters) SetMotion(motion gdnative.Vector2) {
	log.Println("Calling Physics2DShapeQueryParameters.SetMotion()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector2(motion)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "set_motion")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Set the [Shape2D] that will be used for collision/intersection queries.
	Args: [{ false shape Resource}], Returns: void
*/

func (o *Physics2DShapeQueryParameters) SetShape(shape resource.Resource) {
	log.Println("Calling Physics2DShapeQueryParameters.SetShape()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(shape.GetOwner())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "set_shape")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false shape RID}], Returns: void
*/

func (o *Physics2DShapeQueryParameters) SetShapeRid(shape gdnative.RID) {
	log.Println("Calling Physics2DShapeQueryParameters.SetShapeRid()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromRid(shape)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "set_shape_rid")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false transform Transform2D}], Returns: void
*/

func (o *Physics2DShapeQueryParameters) SetTransform(transform gdnative.Transform2D) {
	log.Println("Calling Physics2DShapeQueryParameters.SetTransform()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromTransform2D(transform)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Physics2DShapeQueryParameters", "set_transform")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
