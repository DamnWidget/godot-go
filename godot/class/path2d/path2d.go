package path2d

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"

	"github.com/shadowapex/godot-go/godot/class/curve2d"
	"github.com/shadowapex/godot-go/godot/class/node2d"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewPath2DFromPointer(ptr gdnative.Pointer) *Path2D {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := Path2D{}
	obj.SetOwner(owner)

	return &obj

}

/*
Can have [PathFollow2D] child-nodes moving along the [Curve2D]. See [PathFollow2D] for more information on this usage.
*/
type Path2D struct {
	node2d.Node2D
}

func (o *Path2D) BaseClass() string {
	return "Path2D"
}

/*
        Undocumented
	Args: [], Returns: void
*/

func (o *Path2D) X_CurveChanged() {
	log.Println("Calling Path2D.X_CurveChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Path2D", "_curve_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: Curve2D
*/

func (o *Path2D) GetCurve() curve2d.Curve2D {
	log.Println("Calling Path2D.GetCurve()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Path2D", "get_curve")

	// Call the parent method.
	// Curve2D
	retPtr := curve2d.NewEmptyCurve2D()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := curve2d.NewCurve2DFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false curve Curve2D}], Returns: void
*/

func (o *Path2D) SetCurve(curve curve2d.Curve2D) {
	log.Println("Calling Path2D.SetCurve()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(curve.GetOwner())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Path2D", "set_curve")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
