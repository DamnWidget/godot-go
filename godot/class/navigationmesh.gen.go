package class

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewNavigationMeshFromPointer(ptr gdnative.Pointer) NavigationMesh {
func NewNavigationMeshFromPointer(ptr gdnative.Pointer) NavigationMesh {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := NavigationMesh{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type NavigationMesh struct {
	Resource
	owner gdnative.Object
}

func (o *NavigationMesh) BaseClass() string {
	return "NavigationMesh"
}

/*
        Undocumented
	Args: [], Returns: Array
*/
func (o *NavigationMesh) X_GetPolygons() gdnative.Array {
	//log.Println("Calling NavigationMesh.X_GetPolygons()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "_get_polygons")

	// Call the parent method.
	// Array
	retPtr := gdnative.NewEmptyArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewArrayFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false polygons Array}], Returns: void
*/
func (o *NavigationMesh) X_SetPolygons(polygons gdnative.Array) {
	//log.Println("Calling NavigationMesh.X_SetPolygons()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromArray(polygons)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "_set_polygons")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false polygon PoolIntArray}], Returns: void
*/
func (o *NavigationMesh) AddPolygon(polygon gdnative.PoolIntArray) {
	//log.Println("Calling NavigationMesh.AddPolygon()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromPoolIntArray(polygon)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "add_polygon")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [], Returns: void
*/
func (o *NavigationMesh) ClearPolygons() {
	//log.Println("Calling NavigationMesh.ClearPolygons()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "clear_polygons")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false mesh Mesh}], Returns: void
*/
func (o *NavigationMesh) CreateFromMesh(mesh Mesh) {
	//log.Println("Calling NavigationMesh.CreateFromMesh()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(mesh.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "create_from_mesh")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetAgentHeight() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetAgentHeight()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_agent_height")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetAgentMaxClimb() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetAgentMaxClimb()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_agent_max_climb")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetAgentMaxSlope() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetAgentMaxSlope()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_agent_max_slope")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetAgentRadius() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetAgentRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_agent_radius")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetCellHeight() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetCellHeight()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_cell_height")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetCellSize() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetCellSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_cell_size")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetDetailSampleDistance() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetDetailSampleDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_detail_sample_distance")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetDetailSampleMaxError() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetDetailSampleMaxError()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_detail_sample_max_error")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetEdgeMaxError() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetEdgeMaxError()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_edge_max_error")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetEdgeMaxLength() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetEdgeMaxLength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_edge_max_length")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *NavigationMesh) GetFilterLedgeSpans() gdnative.Bool {
	//log.Println("Calling NavigationMesh.GetFilterLedgeSpans()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_filter_ledge_spans")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *NavigationMesh) GetFilterLowHangingObstacles() gdnative.Bool {
	//log.Println("Calling NavigationMesh.GetFilterLowHangingObstacles()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_filter_low_hanging_obstacles")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: bool
*/
func (o *NavigationMesh) GetFilterWalkableLowHeightSpans() gdnative.Bool {
	//log.Println("Calling NavigationMesh.GetFilterWalkableLowHeightSpans()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_filter_walkable_low_height_spans")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*

	Args: [{ false idx int}], Returns: PoolIntArray
*/
func (o *NavigationMesh) GetPolygon(idx gdnative.Int) gdnative.PoolIntArray {
	//log.Println("Calling NavigationMesh.GetPolygon()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(idx)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_polygon")

	// Call the parent method.
	// PoolIntArray
	retPtr := gdnative.NewEmptyPoolIntArray()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewPoolIntArrayFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*

	Args: [], Returns: int
*/
func (o *NavigationMesh) GetPolygonCount() gdnative.Int {
	//log.Println("Calling NavigationMesh.GetPolygonCount()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_polygon_count")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetRegionMergeSize() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetRegionMergeSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_region_merge_size")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetRegionMinSize() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetRegionMinSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_region_min_size")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: int
*/
func (o *NavigationMesh) GetSamplePartitionType() gdnative.Int {
	//log.Println("Calling NavigationMesh.GetSamplePartitionType()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_sample_partition_type")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*

	Args: [], Returns: PoolVector3Array
*/
func (o *NavigationMesh) GetVertices() gdnative.PoolVector3Array {
	//log.Println("Calling NavigationMesh.GetVertices()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_vertices")

	// Call the parent method.
	// PoolVector3Array
	retPtr := gdnative.NewEmptyPoolVector3Array()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewPoolVector3ArrayFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *NavigationMesh) GetVertsPerPoly() gdnative.Float {
	//log.Println("Calling NavigationMesh.GetVertsPerPoly()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "get_verts_per_poly")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false agent_height float}], Returns: void
*/
func (o *NavigationMesh) SetAgentHeight(agentHeight gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetAgentHeight()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(agentHeight)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_agent_height")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false agent_max_climb float}], Returns: void
*/
func (o *NavigationMesh) SetAgentMaxClimb(agentMaxClimb gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetAgentMaxClimb()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(agentMaxClimb)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_agent_max_climb")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false agent_max_slope float}], Returns: void
*/
func (o *NavigationMesh) SetAgentMaxSlope(agentMaxSlope gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetAgentMaxSlope()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(agentMaxSlope)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_agent_max_slope")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false agent_radius float}], Returns: void
*/
func (o *NavigationMesh) SetAgentRadius(agentRadius gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetAgentRadius()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(agentRadius)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_agent_radius")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false cell_height float}], Returns: void
*/
func (o *NavigationMesh) SetCellHeight(cellHeight gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetCellHeight()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(cellHeight)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_cell_height")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false cell_size float}], Returns: void
*/
func (o *NavigationMesh) SetCellSize(cellSize gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetCellSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(cellSize)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_cell_size")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false detail_sample_dist float}], Returns: void
*/
func (o *NavigationMesh) SetDetailSampleDistance(detailSampleDist gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetDetailSampleDistance()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(detailSampleDist)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_detail_sample_distance")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false detail_sample_max_error float}], Returns: void
*/
func (o *NavigationMesh) SetDetailSampleMaxError(detailSampleMaxError gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetDetailSampleMaxError()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(detailSampleMaxError)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_detail_sample_max_error")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false edge_max_error float}], Returns: void
*/
func (o *NavigationMesh) SetEdgeMaxError(edgeMaxError gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetEdgeMaxError()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(edgeMaxError)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_edge_max_error")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false edge_max_length float}], Returns: void
*/
func (o *NavigationMesh) SetEdgeMaxLength(edgeMaxLength gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetEdgeMaxLength()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(edgeMaxLength)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_edge_max_length")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false filter_ledge_spans bool}], Returns: void
*/
func (o *NavigationMesh) SetFilterLedgeSpans(filterLedgeSpans gdnative.Bool) {
	//log.Println("Calling NavigationMesh.SetFilterLedgeSpans()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(filterLedgeSpans)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_filter_ledge_spans")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false filter_low_hanging_obstacles bool}], Returns: void
*/
func (o *NavigationMesh) SetFilterLowHangingObstacles(filterLowHangingObstacles gdnative.Bool) {
	//log.Println("Calling NavigationMesh.SetFilterLowHangingObstacles()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(filterLowHangingObstacles)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_filter_low_hanging_obstacles")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false filter_walkable_low_height_spans bool}], Returns: void
*/
func (o *NavigationMesh) SetFilterWalkableLowHeightSpans(filterWalkableLowHeightSpans gdnative.Bool) {
	//log.Println("Calling NavigationMesh.SetFilterWalkableLowHeightSpans()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(filterWalkableLowHeightSpans)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_filter_walkable_low_height_spans")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false region_merge_size float}], Returns: void
*/
func (o *NavigationMesh) SetRegionMergeSize(regionMergeSize gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetRegionMergeSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(regionMergeSize)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_region_merge_size")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false region_min_size float}], Returns: void
*/
func (o *NavigationMesh) SetRegionMinSize(regionMinSize gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetRegionMinSize()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(regionMinSize)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_region_min_size")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false sample_partition_type int}], Returns: void
*/
func (o *NavigationMesh) SetSamplePartitionType(samplePartitionType gdnative.Int) {
	//log.Println("Calling NavigationMesh.SetSamplePartitionType()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(samplePartitionType)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_sample_partition_type")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [{ false vertices PoolVector3Array}], Returns: void
*/
func (o *NavigationMesh) SetVertices(vertices gdnative.PoolVector3Array) {
	//log.Println("Calling NavigationMesh.SetVertices()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromPoolVector3Array(vertices)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_vertices")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false verts_per_poly float}], Returns: void
*/
func (o *NavigationMesh) SetVertsPerPoly(vertsPerPoly gdnative.Float) {
	//log.Println("Calling NavigationMesh.SetVertsPerPoly()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(vertsPerPoly)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NavigationMesh", "set_verts_per_poly")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
