package class

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewWebSocketPeerFromPointer(ptr gdnative.Pointer) WebSocketPeer {
func NewWebSocketPeerFromPointer(ptr gdnative.Pointer) WebSocketPeer {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := WebSocketPeer{}
	obj.SetBaseObject(owner)

	return obj
}

/*

 */
type WebSocketPeer struct {
	PacketPeer
	owner gdnative.Object
}

func (o *WebSocketPeer) BaseClass() string {
	return "WebSocketPeer"
}

// SetBaseObject will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *WebSocketPeer) SetBaseObject(object gdnative.Object) {
	o.owner = object
}

func (o *WebSocketPeer) GetBaseObject() gdnative.Object {
	return o.owner
}

/*

	Args: [], Returns: void
*/
func (o *WebSocketPeer) Close() {
	log.Println("Calling WebSocketPeer.Close()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "close")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [], Returns: enum.WebSocketPeer::WriteMode
*/

/*

	Args: [], Returns: bool
*/
func (o *WebSocketPeer) IsConnectedToHost() gdnative.Bool {
	log.Println("Calling WebSocketPeer.IsConnectedToHost()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "is_connected_to_host")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*

	Args: [{ false mode int}], Returns: void
*/
func (o *WebSocketPeer) SetWriteMode(mode gdnative.Int) {
	log.Println("Calling WebSocketPeer.SetWriteMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(mode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "set_write_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*

	Args: [], Returns: bool
*/
func (o *WebSocketPeer) WasStringPacket() gdnative.Bool {
	log.Println("Calling WebSocketPeer.WasStringPacket()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("WebSocketPeer", "was_string_packet")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}
