package audiostream

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Undocumented
*/
type AudioStreamOGGVorbis struct {
	AudioStream
}

func (o *AudioStreamOGGVorbis) BaseClass() string {
	return "AudioStreamOGGVorbis"
}

/*
   Undocumented
*/
func (o *AudioStreamOGGVorbis) X_GetData() *PoolByteArray {
	log.Println("Calling AudioStreamOGGVorbis.X_GetData()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "_get_data", goArguments, "*PoolByteArray")

	returnValue := goRet.Interface().(*PoolByteArray)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioStreamOGGVorbis) X_SetData(data *PoolByteArray) {
	log.Println("Calling AudioStreamOGGVorbis.X_SetData()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(data)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_set_data", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioStreamOGGVorbis) GetLoopOffset() gdnative.Float {
	log.Println("Calling AudioStreamOGGVorbis.GetLoopOffset()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_loop_offset", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioStreamOGGVorbis) HasLoop() gdnative.Bool {
	log.Println("Calling AudioStreamOGGVorbis.HasLoop()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "has_loop", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *AudioStreamOGGVorbis) SetLoop(enable gdnative.Bool) {
	log.Println("Calling AudioStreamOGGVorbis.SetLoop()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enable)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_loop", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *AudioStreamOGGVorbis) SetLoopOffset(seconds gdnative.Float) {
	log.Println("Calling AudioStreamOGGVorbis.SetLoopOffset()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(seconds)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_loop_offset", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   AudioStreamOGGVorbisImplementer is an interface for AudioStreamOGGVorbis objects.
*/
type AudioStreamOGGVorbisImplementer interface {
	Class
}
