package mobilevrinterface

import (
	"log"
	"reflect"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Undocumented
*/
type MobileVRInterface struct {
	ARVRInterface
}

func (o *MobileVRInterface) BaseClass() string {
	return "MobileVRInterface"
}

/*
   Undocumented
*/
func (o *MobileVRInterface) GetDisplayToLens() gdnative.Float {
	log.Println("Calling MobileVRInterface.GetDisplayToLens()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_display_to_lens", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *MobileVRInterface) GetDisplayWidth() gdnative.Float {
	log.Println("Calling MobileVRInterface.GetDisplayWidth()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_display_width", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *MobileVRInterface) GetIod() gdnative.Float {
	log.Println("Calling MobileVRInterface.GetIod()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_iod", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *MobileVRInterface) GetK1() gdnative.Float {
	log.Println("Calling MobileVRInterface.GetK1()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_k1", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *MobileVRInterface) GetK2() gdnative.Float {
	log.Println("Calling MobileVRInterface.GetK2()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_k2", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *MobileVRInterface) GetOversample() gdnative.Float {
	log.Println("Calling MobileVRInterface.GetOversample()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_oversample", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *MobileVRInterface) SetDisplayToLens(displayToLens gdnative.Float) {
	log.Println("Calling MobileVRInterface.SetDisplayToLens()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(displayToLens)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_display_to_lens", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *MobileVRInterface) SetDisplayWidth(displayWidth gdnative.Float) {
	log.Println("Calling MobileVRInterface.SetDisplayWidth()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(displayWidth)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_display_width", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *MobileVRInterface) SetIod(iod gdnative.Float) {
	log.Println("Calling MobileVRInterface.SetIod()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(iod)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_iod", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *MobileVRInterface) SetK1(k gdnative.Float) {
	log.Println("Calling MobileVRInterface.SetK1()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(k)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_k1", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *MobileVRInterface) SetK2(k gdnative.Float) {
	log.Println("Calling MobileVRInterface.SetK2()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(k)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_k2", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *MobileVRInterface) SetOversample(oversample gdnative.Float) {
	log.Println("Calling MobileVRInterface.SetOversample()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(oversample)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_oversample", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   MobileVRInterfaceImplementer is an interface for MobileVRInterface objects.
*/
type MobileVRInterfaceImplementer interface {
	Class
}
