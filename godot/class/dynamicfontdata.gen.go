package class

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewDynamicFontDataFromPointer(ptr gdnative.Pointer) DynamicFontData {
func NewDynamicFontDataFromPointer(ptr gdnative.Pointer) DynamicFontData {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := DynamicFontData{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Used with [DynamicFont] to describe the location of a vector font file for dynamic rendering at runtime.
*/
type DynamicFontData struct {
	Resource
	owner gdnative.Object
}

func (o *DynamicFontData) BaseClass() string {
	return "DynamicFontData"
}

/*
        Undocumented
	Args: [], Returns: String
*/
func (o *DynamicFontData) GetFontPath() gdnative.String {
	//log.Println("Calling DynamicFontData.GetFontPath()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("DynamicFontData", "get_font_path")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false path String}], Returns: void
*/
func (o *DynamicFontData) SetFontPath(path gdnative.String) {
	//log.Println("Calling DynamicFontData.SetFontPath()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(path)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("DynamicFontData", "set_font_path")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
