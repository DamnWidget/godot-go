package inputevent

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewInputEventJoypadButtonFromPointer(ptr gdnative.Pointer) *InputEventJoypadButton {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := InputEventJoypadButton{}
	obj.SetOwner(owner)

	return &obj

}

/*
Input event type for gamepad buttons. For joysticks see [InputEventJoypadMotion].
*/
type InputEventJoypadButton struct {
	InputEvent
}

func (o *InputEventJoypadButton) BaseClass() string {
	return "InputEventJoypadButton"
}

/*
        Undocumented
	Args: [], Returns: int
*/

func (o *InputEventJoypadButton) GetButtonIndex() gdnative.Int {
	log.Println("Calling InputEventJoypadButton.GetButtonIndex()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventJoypadButton", "get_button_index")

	// Call the parent method.
	// int
	retPtr := gdnative.NewEmptyInt()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewIntFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [], Returns: float
*/

func (o *InputEventJoypadButton) GetPressure() gdnative.Float {
	log.Println("Calling InputEventJoypadButton.GetPressure()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventJoypadButton", "get_pressure")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false button_index int}], Returns: void
*/

func (o *InputEventJoypadButton) SetButtonIndex(buttonIndex gdnative.Int) {
	log.Println("Calling InputEventJoypadButton.SetButtonIndex()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(buttonIndex)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventJoypadButton", "set_button_index")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false pressed bool}], Returns: void
*/

func (o *InputEventJoypadButton) SetPressed(pressed gdnative.Bool) {
	log.Println("Calling InputEventJoypadButton.SetPressed()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(pressed)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventJoypadButton", "set_pressed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false pressure float}], Returns: void
*/

func (o *InputEventJoypadButton) SetPressure(pressure gdnative.Float) {
	log.Println("Calling InputEventJoypadButton.SetPressure()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(pressure)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("InputEventJoypadButton", "set_pressure")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
