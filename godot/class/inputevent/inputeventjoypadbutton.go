package inputevent

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Input event type for gamepad buttons. For joysticks see [InputEventJoypadMotion].
*/
type InputEventJoypadButton struct {
	InputEvent
}

func (o *InputEventJoypadButton) BaseClass() string {
	return "InputEventJoypadButton"
}

/*
   Undocumented
*/
func (o *InputEventJoypadButton) GetButtonIndex() gdnative.Int {
	log.Println("Calling InputEventJoypadButton.GetButtonIndex()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_button_index", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *InputEventJoypadButton) GetPressure() gdnative.Float {
	log.Println("Calling InputEventJoypadButton.GetPressure()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_pressure", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *InputEventJoypadButton) SetButtonIndex(buttonIndex gdnative.Int) {
	log.Println("Calling InputEventJoypadButton.SetButtonIndex()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(buttonIndex)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_button_index", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *InputEventJoypadButton) SetPressed(pressed gdnative.Bool) {
	log.Println("Calling InputEventJoypadButton.SetPressed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(pressed)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_pressed", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *InputEventJoypadButton) SetPressure(pressure gdnative.Float) {
	log.Println("Calling InputEventJoypadButton.SetPressure()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(pressure)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_pressure", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   InputEventJoypadButtonImplementer is an interface for InputEventJoypadButton objects.
*/
type InputEventJoypadButtonImplementer interface {
	Class
}
