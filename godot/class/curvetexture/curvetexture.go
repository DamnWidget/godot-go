package curvetexture

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Renders a given [Curve] provided to it. Simplifies the task of drawing curves and/or saving them as image files.
*/
type CurveTexture struct {
	Texture
}

func (o *CurveTexture) BaseClass() string {
	return "CurveTexture"
}

/*
   Undocumented
*/
func (o *CurveTexture) X_Update() {
	log.Println("Calling CurveTexture.X_Update()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_update", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *CurveTexture) GetCurve() *Curve {
	log.Println("Calling CurveTexture.GetCurve()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_curve", goArguments, "*Curve")

	returnValue := goRet.Interface().(*Curve)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *CurveTexture) SetCurve(curve *Curve) {
	log.Println("Calling CurveTexture.SetCurve()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(curve)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_curve", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *CurveTexture) SetWidth(width gdnative.Int) {
	log.Println("Calling CurveTexture.SetWidth()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(width)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_width", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   CurveTextureImplementer is an interface for CurveTexture objects.
*/
type CurveTextureImplementer interface {
	Class
}
