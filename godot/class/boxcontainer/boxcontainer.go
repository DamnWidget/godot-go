package boxcontainer

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Arranges child controls vertically or horizontally, and rearranges the controls automatically when their minimum size changes.
*/
type BoxContainer struct {
	Container
}

func (o *BoxContainer) BaseClass() string {
	return "BoxContainer"
}

/*
   Adds a control to the box as a spacer. If [code]true[/code], [i]begin[/i] will insert the spacer control in front of other children.
*/
func (o *BoxContainer) AddSpacer(begin gdnative.Bool) {
	log.Println("Calling BoxContainer.AddSpacer()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(begin)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "add_spacer", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *BoxContainer) GetAlignment() gdnative.Int {
	log.Println("Calling BoxContainer.GetAlignment()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_alignment", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *BoxContainer) SetAlignment(alignment gdnative.Int) {
	log.Println("Calling BoxContainer.SetAlignment()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(alignment)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_alignment", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   BoxContainerImplementer is an interface for BoxContainer objects.
*/
type BoxContainerImplementer interface {
	Class
}
