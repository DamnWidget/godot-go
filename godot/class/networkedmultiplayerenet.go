package class

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewNetworkedMultiplayerENetFromPointer(ptr gdnative.Pointer) NetworkedMultiplayerENet {
func NewNetworkedMultiplayerENetFromPointer(ptr gdnative.Pointer) NetworkedMultiplayerENet {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := NetworkedMultiplayerENet{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Undocumented
*/
type NetworkedMultiplayerENet struct {
	NetworkedMultiplayerPeer
	owner gdnative.Object
}

func (o *NetworkedMultiplayerENet) BaseClass() string {
	return "NetworkedMultiplayerENet"
}

// SetBaseObject will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *NetworkedMultiplayerENet) SetBaseObject(object gdnative.Object) {
	o.owner = object
}

func (o *NetworkedMultiplayerENet) GetBaseObject() gdnative.Object {
	return o.owner
}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *NetworkedMultiplayerENet) CloseConnection() {
	log.Println("Calling NetworkedMultiplayerENet.CloseConnection()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NetworkedMultiplayerENet", "close_connection")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false ip String} { false port int} {0 true in_bandwidth int} {0 true out_bandwidth int}], Returns: enum.Error
*/

/*
        Undocumented
	Args: [{ false port int} {32 true max_clients int} {0 true in_bandwidth int} {0 true out_bandwidth int}], Returns: enum.Error
*/

/*
        Undocumented
	Args: [], Returns: enum.NetworkedMultiplayerENet::CompressionMode
*/

/*
        Undocumented
	Args: [{ false ip String}], Returns: void
*/
func (o *NetworkedMultiplayerENet) SetBindIp(ip gdnative.String) {
	log.Println("Calling NetworkedMultiplayerENet.SetBindIp()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(ip)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NetworkedMultiplayerENet", "set_bind_ip")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [{ false mode int}], Returns: void
*/
func (o *NetworkedMultiplayerENet) SetCompressionMode(mode gdnative.Int) {
	log.Println("Calling NetworkedMultiplayerENet.SetCompressionMode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(mode)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("NetworkedMultiplayerENet", "set_compression_mode")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
