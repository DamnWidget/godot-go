package pinjoint2d

import (
	"log"
	"reflect"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Pin Joint for 2D Rigid Bodies. It pins 2 bodies (rigid or static) together, or a single body to a fixed position in space.
*/
type PinJoint2D struct {
	Joint2D
}

func (o *PinJoint2D) BaseClass() string {
	return "PinJoint2D"
}

/*
   Undocumented
*/
func (o *PinJoint2D) GetSoftness() gdnative.Float {
	log.Println("Calling PinJoint2D.GetSoftness()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_softness", goArguments, "gdnative.Float")

	returnValue := goRet.Interface().(gdnative.Float)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *PinJoint2D) SetSoftness(softness gdnative.Float) {
	log.Println("Calling PinJoint2D.SetSoftness()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(softness)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_softness", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   PinJoint2DImplementer is an interface for PinJoint2D objects.
*/
type PinJoint2DImplementer interface {
	Class
}
