package progressbar

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
	"github.com/shadowapex/godot-go/godot/class/ranges"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewProgressBarFromPointer(ptr gdnative.Pointer) *ProgressBar {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := ProgressBar{}
	obj.SetOwner(owner)

	return &obj

}

/*
General purpose progress bar. Shows fill percentage from right to left.
*/
type ProgressBar struct {
	ranges.Range
}

func (o *ProgressBar) BaseClass() string {
	return "ProgressBar"
}

/*
        Undocumented
	Args: [], Returns: bool
*/

func (o *ProgressBar) IsPercentVisible() gdnative.Bool {
	log.Println("Calling ProgressBar.IsPercentVisible()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ProgressBar", "is_percent_visible")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false visible bool}], Returns: void
*/

func (o *ProgressBar) SetPercentVisible(visible gdnative.Bool) {
	log.Println("Calling ProgressBar.SetPercentVisible()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromBool(visible)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ProgressBar", "set_percent_visible")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
