package websocket

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*

 */
type WebSocketMultiplayerPeer struct {
	NetworkedMultiplayerPeer
}

func (o *WebSocketMultiplayerPeer) BaseClass() string {
	return "WebSocketMultiplayerPeer"
}

/*

 */
func (o *WebSocketMultiplayerPeer) GetPeer(peerId gdnative.Int) *WebSocketPeer {
	log.Println("Calling WebSocketMultiplayerPeer.GetPeer()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(peerId)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_peer", goArguments, "*WebSocketPeer")

	returnValue := goRet.Interface().(*WebSocketPeer)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   WebSocketMultiplayerPeerImplementer is an interface for WebSocketMultiplayerPeer objects.
*/
type WebSocketMultiplayerPeerImplementer interface {
	Class
}
