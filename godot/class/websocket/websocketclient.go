package websocket

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*

 */
type WebSocketClient struct {
	WebSocketMultiplayerPeer
}

func (o *WebSocketClient) BaseClass() string {
	return "WebSocketClient"
}

/*

 */
func (o *WebSocketClient) ConnectToUrl(url gdnative.String, protocols *PoolStringArray, gdMpApi gdnative.Bool) gdnative.Int {
	log.Println("Calling WebSocketClient.ConnectToUrl()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 3, 3)
	goArguments[0] = reflect.ValueOf(url)
	goArguments[1] = reflect.ValueOf(protocols)
	goArguments[2] = reflect.ValueOf(gdMpApi)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "connect_to_url", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *WebSocketClient) DisconnectFromHost() {
	log.Println("Calling WebSocketClient.DisconnectFromHost()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "disconnect_from_host", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   WebSocketClientImplementer is an interface for WebSocketClient objects.
*/
type WebSocketClientImplementer interface {
	Class
}
