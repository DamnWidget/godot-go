package colorrect

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
	"github.com/shadowapex/godot-go/godot/class/control"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewColorRectFromPointer(ptr gdnative.Pointer) *ColorRect {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := ColorRect{}
	obj.SetOwner(owner)

	return &obj

}

/*
An object that is represented on the canvas as a rect with color. [Color] is used to set or get color info for the rect.
*/
type ColorRect struct {
	control.Control
}

func (o *ColorRect) BaseClass() string {
	return "ColorRect"
}

/*
        Undocumented
	Args: [], Returns: Color
*/

func (o *ColorRect) GetFrameColor() gdnative.Color {
	log.Println("Calling ColorRect.GetFrameColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ColorRect", "get_frame_color")

	// Call the parent method.
	// Color
	retPtr := gdnative.NewEmptyColor()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewColorFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false color Color}], Returns: void
*/

func (o *ColorRect) SetFrameColor(color gdnative.Color) {
	log.Println("Calling ColorRect.SetFrameColor()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromColor(color)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ColorRect", "set_frame_color")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
