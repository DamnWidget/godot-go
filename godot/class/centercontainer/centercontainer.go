package centercontainer

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
CenterContainer Keeps children controls centered. This container keeps all children to their minimum size, in the center.
*/
type CenterContainer struct {
	Container
}

func (o *CenterContainer) BaseClass() string {
	return "CenterContainer"
}

/*
   Undocumented
*/
func (o *CenterContainer) IsUsingTopLeft() gdnative.Bool {
	log.Println("Calling CenterContainer.IsUsingTopLeft()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_using_top_left", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *CenterContainer) SetUseTopLeft(enable gdnative.Bool) {
	log.Println("Calling CenterContainer.SetUseTopLeft()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enable)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_use_top_left", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   CenterContainerImplementer is an interface for CenterContainer objects.
*/
type CenterContainerImplementer interface {
	Class
}
