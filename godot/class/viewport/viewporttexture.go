package viewport

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
	"github.com/shadowapex/godot-go/godot/class/texture"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewViewportTextureFromPointer(ptr gdnative.Pointer) *ViewportTexture {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := ViewportTexture{}
	obj.SetOwner(owner)

	return &obj

}

/*

 */
type ViewportTexture struct {
	texture.Texture
}

func (o *ViewportTexture) BaseClass() string {
	return "ViewportTexture"
}

/*
        Undocumented
	Args: [], Returns: NodePath
*/

func (o *ViewportTexture) GetViewportPathInScene() gdnative.NodePath {
	log.Println("Calling ViewportTexture.GetViewportPathInScene()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ViewportTexture", "get_viewport_path_in_scene")

	// Call the parent method.
	// NodePath
	retPtr := gdnative.NewEmptyNodePath()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewNodePathFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false path NodePath}], Returns: void
*/

func (o *ViewportTexture) SetViewportPathInScene(path gdnative.NodePath) {
	log.Println("Calling ViewportTexture.SetViewportPathInScene()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromNodePath(path)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ViewportTexture", "set_viewport_path_in_scene")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
