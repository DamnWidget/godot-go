package confirmationdialog

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"

	"github.com/shadowapex/godot-go/godot/class/acceptdialog"
	"github.com/shadowapex/godot-go/godot/class/button"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewConfirmationDialogFromPointer(ptr gdnative.Pointer) *ConfirmationDialog {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := ConfirmationDialog{}
	obj.SetOwner(owner)

	return &obj

}

/*
Dialog for confirmation of actions. This dialog inherits from [AcceptDialog], but has by default an OK and Cancel button (in host OS order).
*/
type ConfirmationDialog struct {
	acceptdialog.AcceptDialog
}

func (o *ConfirmationDialog) BaseClass() string {
	return "ConfirmationDialog"
}

/*
        Return the cancel button.
	Args: [], Returns: Button
*/

func (o *ConfirmationDialog) GetCancel() button.Button {
	log.Println("Calling ConfirmationDialog.GetCancel()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("ConfirmationDialog", "get_cancel")

	// Call the parent method.
	// Button
	retPtr := button.NewEmptyButton()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := button.NewButtonFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}
