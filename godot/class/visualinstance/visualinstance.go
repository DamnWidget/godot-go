package visualinstance

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*

 */
type VisualInstance struct {
	Spatial
}

func (o *VisualInstance) BaseClass() string {
	return "VisualInstance"
}

/*
   Undocumented
*/
func (o *VisualInstance) X_GetVisualInstanceRid() *RID {
	log.Println("Calling VisualInstance.X_GetVisualInstanceRid()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "_get_visual_instance_rid", goArguments, "*RID")

	returnValue := goRet.Interface().(*RID)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Returns the [AABB] (also known as the bounding box) for this VisualInstance.
*/
func (o *VisualInstance) GetAabb() *AABB {
	log.Println("Calling VisualInstance.GetAabb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_aabb", goArguments, "*AABB")

	returnValue := goRet.Interface().(*AABB)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *VisualInstance) GetLayerMask() gdnative.Int {
	log.Println("Calling VisualInstance.GetLayerMask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_layer_mask", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Returns the transformed [AABB] (also known as the bounding box) for this VisualInstance. Transformed in this case means the [AABB] plus the position, rotation, and scale of the [Spatial]s [Transform]
*/
func (o *VisualInstance) GetTransformedAabb() *AABB {
	log.Println("Calling VisualInstance.GetTransformedAabb()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_transformed_aabb", goArguments, "*AABB")

	returnValue := goRet.Interface().(*AABB)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Sets the base of the VisualInstance, which changes how the engine handles the VisualInstance under the hood. It is recommended to only use set_base if you know what you're doing.
*/
func (o *VisualInstance) SetBase(base *RID) {
	log.Println("Calling VisualInstance.SetBase()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(base)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_base", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *VisualInstance) SetLayerMask(mask gdnative.Int) {
	log.Println("Calling VisualInstance.SetLayerMask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(mask)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_layer_mask", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   VisualInstanceImplementer is an interface for VisualInstance objects.
*/
type VisualInstanceImplementer interface {
	Class
}
