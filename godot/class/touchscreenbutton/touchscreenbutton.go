package touchscreenbutton

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Button for touch screen devices. You can set it to be visible on all screens, or only on touch devices.
*/
type TouchScreenButton struct {
	Node2D
}

func (o *TouchScreenButton) BaseClass() string {
	return "TouchScreenButton"
}

/*
   Undocumented
*/
func (o *TouchScreenButton) X_Input(arg0 *InputEvent) {
	log.Println("Calling TouchScreenButton.X_Input()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(arg0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_input", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) GetAction() gdnative.String {
	log.Println("Calling TouchScreenButton.GetAction()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_action", goArguments, "gdnative.String")

	returnValue := goRet.Interface().(gdnative.String)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) GetBitmask() *BitMap {
	log.Println("Calling TouchScreenButton.GetBitmask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_bitmask", goArguments, "*BitMap")

	returnValue := goRet.Interface().(*BitMap)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) GetShape() *Shape2D {
	log.Println("Calling TouchScreenButton.GetShape()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_shape", goArguments, "*Shape2D")

	returnValue := goRet.Interface().(*Shape2D)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) GetTexture() *Texture {
	log.Println("Calling TouchScreenButton.GetTexture()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_texture", goArguments, "*Texture")

	returnValue := goRet.Interface().(*Texture)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) GetTexturePressed() *Texture {
	log.Println("Calling TouchScreenButton.GetTexturePressed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_texture_pressed", goArguments, "*Texture")

	returnValue := goRet.Interface().(*Texture)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) GetVisibilityMode() gdnative.Int {
	log.Println("Calling TouchScreenButton.GetVisibilityMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_visibility_mode", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) IsPassbyPressEnabled() gdnative.Bool {
	log.Println("Calling TouchScreenButton.IsPassbyPressEnabled()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_passby_press_enabled", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Returns [code]true[/code] if this button is currently pressed.
*/
func (o *TouchScreenButton) IsPressed() gdnative.Bool {
	log.Println("Calling TouchScreenButton.IsPressed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_pressed", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) IsShapeCentered() gdnative.Bool {
	log.Println("Calling TouchScreenButton.IsShapeCentered()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_shape_centered", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) IsShapeVisible() gdnative.Bool {
	log.Println("Calling TouchScreenButton.IsShapeVisible()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_shape_visible", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetAction(action gdnative.String) {
	log.Println("Calling TouchScreenButton.SetAction()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(action)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_action", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetBitmask(bitmask *BitMap) {
	log.Println("Calling TouchScreenButton.SetBitmask()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(bitmask)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_bitmask", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetPassbyPress(enabled gdnative.Bool) {
	log.Println("Calling TouchScreenButton.SetPassbyPress()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enabled)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_passby_press", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetShape(shape *Shape2D) {
	log.Println("Calling TouchScreenButton.SetShape()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(shape)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_shape", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetShapeCentered(bool gdnative.Bool) {
	log.Println("Calling TouchScreenButton.SetShapeCentered()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(bool)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_shape_centered", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetShapeVisible(bool gdnative.Bool) {
	log.Println("Calling TouchScreenButton.SetShapeVisible()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(bool)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_shape_visible", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetTexture(texture *Texture) {
	log.Println("Calling TouchScreenButton.SetTexture()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(texture)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_texture", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetTexturePressed(texturePressed *Texture) {
	log.Println("Calling TouchScreenButton.SetTexturePressed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(texturePressed)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_texture_pressed", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *TouchScreenButton) SetVisibilityMode(mode gdnative.Int) {
	log.Println("Calling TouchScreenButton.SetVisibilityMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(mode)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_visibility_mode", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   TouchScreenButtonImplementer is an interface for TouchScreenButton objects.
*/
type TouchScreenButtonImplementer interface {
	Class
}
