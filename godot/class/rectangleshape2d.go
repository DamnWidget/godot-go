package class

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewRectangleShape2DFromPointer(ptr gdnative.Pointer) RectangleShape2D {
func NewRectangleShape2DFromPointer(ptr gdnative.Pointer) RectangleShape2D {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := RectangleShape2D{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Rectangle shape for 2D collisions. This shape is useful for modeling box-like 2D objects.
*/
type RectangleShape2D struct {
	Shape2D
	owner gdnative.Object
}

func (o *RectangleShape2D) BaseClass() string {
	return "RectangleShape2D"
}

// SetBaseObject will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *RectangleShape2D) SetBaseObject(object gdnative.Object) {
	o.owner = object
}

func (o *RectangleShape2D) GetBaseObject() gdnative.Object {
	return o.owner
}

/*
        Undocumented
	Args: [], Returns: Vector2
*/
func (o *RectangleShape2D) GetExtents() gdnative.Vector2 {
	log.Println("Calling RectangleShape2D.GetExtents()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("RectangleShape2D", "get_extents")

	// Call the parent method.
	// Vector2
	retPtr := gdnative.NewEmptyVector2()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewVector2FromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false extents Vector2}], Returns: void
*/
func (o *RectangleShape2D) SetExtents(extents gdnative.Vector2) {
	log.Println("Calling RectangleShape2D.SetExtents()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromVector2(extents)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("RectangleShape2D", "set_extents")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
