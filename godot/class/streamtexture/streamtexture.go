package streamtexture

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
A texture that is loaded from a .stex file.
*/
type StreamTexture struct {
	Texture
}

func (o *StreamTexture) BaseClass() string {
	return "StreamTexture"
}

/*
   Undocumented
*/
func (o *StreamTexture) GetLoadPath() gdnative.String {
	log.Println("Calling StreamTexture.GetLoadPath()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_load_path", goArguments, "gdnative.String")

	returnValue := goRet.Interface().(gdnative.String)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *StreamTexture) Load(path gdnative.String) gdnative.Int {
	log.Println("Calling StreamTexture.Load()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(path)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "load", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   StreamTextureImplementer is an interface for StreamTexture objects.
*/
type StreamTextureImplementer interface {
	Class
}
