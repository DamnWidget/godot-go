package convexpolygonshape

import (
	"log"
	"reflect"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Convex polygon shape resource, which can be added to a [PhysicsBody] or area.
*/
type ConvexPolygonShape struct {
	Shape
}

func (o *ConvexPolygonShape) BaseClass() string {
	return "ConvexPolygonShape"
}

/*
   Undocumented
*/
func (o *ConvexPolygonShape) GetPoints() *PoolVector3Array {
	log.Println("Calling ConvexPolygonShape.GetPoints()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_points", goArguments, "*PoolVector3Array")

	returnValue := goRet.Interface().(*PoolVector3Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *ConvexPolygonShape) SetPoints(points *PoolVector3Array) {
	log.Println("Calling ConvexPolygonShape.SetPoints()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(points)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_points", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   ConvexPolygonShapeImplementer is an interface for ConvexPolygonShape objects.
*/
type ConvexPolygonShapeImplementer interface {
	Class
}
