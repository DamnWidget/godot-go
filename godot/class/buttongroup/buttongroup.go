package buttongroup

import (
	"log"
	"reflect"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Group of [Button]. All direct and indirect children buttons become radios. Only one allows being pressed. [member BaseButton.toggle_mode] should be [code]true[/code].
*/
type ButtonGroup struct {
	Resource
}

func (o *ButtonGroup) BaseClass() string {
	return "ButtonGroup"
}

/*
   Return the pressed button.
*/
func (o *ButtonGroup) GetPressedButton() *BaseButton {
	log.Println("Calling ButtonGroup.GetPressedButton()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_pressed_button", goArguments, "*BaseButton")

	returnValue := goRet.Interface().(*BaseButton)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   ButtonGroupImplementer is an interface for ButtonGroup objects.
*/
type ButtonGroupImplementer interface {
	Class
}
