package editor

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*

 */
type EditorResourceConversionPlugin struct {
	Reference
}

func (o *EditorResourceConversionPlugin) BaseClass() string {
	return "EditorResourceConversionPlugin"
}

/*

 */
func (o *EditorResourceConversionPlugin) X_Convert(resource *Resource) *Resource {
	log.Println("Calling EditorResourceConversionPlugin.X_Convert()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(resource)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "_convert", goArguments, "*Resource")

	returnValue := goRet.Interface().(*Resource)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *EditorResourceConversionPlugin) X_ConvertsTo() gdnative.String {
	log.Println("Calling EditorResourceConversionPlugin.X_ConvertsTo()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "_converts_to", goArguments, "gdnative.String")

	returnValue := goRet.Interface().(gdnative.String)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   EditorResourceConversionPluginImplementer is an interface for EditorResourceConversionPlugin objects.
*/
type EditorResourceConversionPluginImplementer interface {
	Class
}
