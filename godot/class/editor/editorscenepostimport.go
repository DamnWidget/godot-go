package editor

import (
	"log"
	"reflect"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*

 */
type EditorScenePostImport struct {
	Reference
}

func (o *EditorScenePostImport) BaseClass() string {
	return "EditorScenePostImport"
}

/*

 */
func (o *EditorScenePostImport) PostImport(scene *Object) {
	log.Println("Calling EditorScenePostImport.PostImport()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(scene)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "post_import", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   EditorScenePostImportImplementer is an interface for EditorScenePostImport objects.
*/
type EditorScenePostImportImplementer interface {
	Class
}
