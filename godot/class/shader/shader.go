package shader

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"

	"github.com/shadowapex/godot-go/godot/class/resource"
	"github.com/shadowapex/godot-go/godot/class/texture"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewShaderFromPointer(ptr gdnative.Pointer) *Shader {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := Shader{}
	obj.SetOwner(owner)

	return &obj

}

/*
To be changed, ignore.
*/
type Shader struct {
	resource.Resource
}

func (o *Shader) BaseClass() string {
	return "Shader"
}

/*
        Undocumented
	Args: [], Returns: String
*/

func (o *Shader) GetCode() gdnative.String {
	log.Println("Calling Shader.GetCode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Shader", "get_code")

	// Call the parent method.
	// String
	retPtr := gdnative.NewEmptyString()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewStringFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*

	Args: [{ false param String}], Returns: Texture
*/

func (o *Shader) GetDefaultTextureParam(param gdnative.String) texture.Texture {
	log.Println("Calling Shader.GetDefaultTextureParam()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(param)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Shader", "get_default_texture_param")

	// Call the parent method.
	// Texture
	retPtr := texture.NewEmptyTexture()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := texture.NewTextureFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*

	Args: [], Returns: enum.Shader::Mode
*/

/*

	Args: [{ false name String}], Returns: bool
*/

func (o *Shader) HasParam(name gdnative.String) gdnative.Bool {
	log.Println("Calling Shader.HasParam()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(name)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Shader", "has_param")

	// Call the parent method.
	// bool
	retPtr := gdnative.NewEmptyBool()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewBoolFromPointer(retPtr)

	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false code String}], Returns: void
*/

func (o *Shader) SetCode(code gdnative.String) {
	log.Println("Calling Shader.SetCode()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromString(code)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Shader", "set_code")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}

/*

	Args: [{ false param String} { false texture Texture}], Returns: void
*/

func (o *Shader) SetDefaultTextureParam(param gdnative.String, texture texture.Texture) {
	log.Println("Calling Shader.SetDefaultTextureParam()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 2, 2)
	ptrArguments[0] = gdnative.NewPointerFromString(param)
	ptrArguments[1] = gdnative.NewPointerFromObject(texture.GetOwner())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Shader", "set_default_texture_param")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
