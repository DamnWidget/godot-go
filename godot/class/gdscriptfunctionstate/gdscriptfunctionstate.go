package gdscriptfunctionstate

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Undocumented
*/
type GDScriptFunctionState struct {
	Reference
}

func (o *GDScriptFunctionState) BaseClass() string {
	return "GDScriptFunctionState"
}

/*
   Undocumented
*/
func (o *GDScriptFunctionState) X_SignalCallback() *Variant {
	log.Println("Calling GDScriptFunctionState.X_SignalCallback()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "_signal_callback", goArguments, "*Variant")

	returnValue := goRet.Interface().(*Variant)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *GDScriptFunctionState) IsValid(extendedCheck gdnative.Bool) gdnative.Bool {
	log.Println("Calling GDScriptFunctionState.IsValid()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(extendedCheck)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_valid", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *GDScriptFunctionState) Resume(arg *Variant) *Variant {
	log.Println("Calling GDScriptFunctionState.Resume()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(arg)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "resume", goArguments, "*Variant")

	returnValue := goRet.Interface().(*Variant)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   GDScriptFunctionStateImplementer is an interface for GDScriptFunctionState objects.
*/
type GDScriptFunctionStateImplementer interface {
	Class
}
