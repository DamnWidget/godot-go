package occluderpolygon2d

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Editor facility that helps you draw a 2D polygon used as resource for [LightOccluder2D].
*/
type OccluderPolygon2D struct {
	Resource
}

func (o *OccluderPolygon2D) BaseClass() string {
	return "OccluderPolygon2D"
}

/*
   Undocumented
*/
func (o *OccluderPolygon2D) GetCullMode() gdnative.Int {
	log.Println("Calling OccluderPolygon2D.GetCullMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_cull_mode", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *OccluderPolygon2D) GetPolygon() *PoolVector2Array {
	log.Println("Calling OccluderPolygon2D.GetPolygon()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_polygon", goArguments, "*PoolVector2Array")

	returnValue := goRet.Interface().(*PoolVector2Array)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *OccluderPolygon2D) IsClosed() gdnative.Bool {
	log.Println("Calling OccluderPolygon2D.IsClosed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_closed", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *OccluderPolygon2D) SetClosed(closed gdnative.Bool) {
	log.Println("Calling OccluderPolygon2D.SetClosed()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(closed)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_closed", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *OccluderPolygon2D) SetCullMode(cullMode gdnative.Int) {
	log.Println("Calling OccluderPolygon2D.SetCullMode()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(cullMode)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_cull_mode", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *OccluderPolygon2D) SetPolygon(polygon *PoolVector2Array) {
	log.Println("Calling OccluderPolygon2D.SetPolygon()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(polygon)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_polygon", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   OccluderPolygon2DImplementer is an interface for OccluderPolygon2D objects.
*/
type OccluderPolygon2DImplementer interface {
	Class
}
