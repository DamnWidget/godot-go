package visualscript

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Undocumented
*/
type VisualScriptBasicTypeConstant struct {
	VisualScriptNode
}

func (o *VisualScriptBasicTypeConstant) BaseClass() string {
	return "VisualScriptBasicTypeConstant"
}

/*
   Undocumented
*/
func (o *VisualScriptBasicTypeConstant) GetBasicType() gdnative.Int {
	log.Println("Calling VisualScriptBasicTypeConstant.GetBasicType()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_basic_type", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *VisualScriptBasicTypeConstant) GetBasicTypeConstant() gdnative.String {
	log.Println("Calling VisualScriptBasicTypeConstant.GetBasicTypeConstant()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_basic_type_constant", goArguments, "gdnative.String")

	returnValue := goRet.Interface().(gdnative.String)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *VisualScriptBasicTypeConstant) SetBasicType(name gdnative.Int) {
	log.Println("Calling VisualScriptBasicTypeConstant.SetBasicType()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(name)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_basic_type", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *VisualScriptBasicTypeConstant) SetBasicTypeConstant(name gdnative.String) {
	log.Println("Calling VisualScriptBasicTypeConstant.SetBasicTypeConstant()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(name)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_basic_type_constant", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   VisualScriptBasicTypeConstantImplementer is an interface for VisualScriptBasicTypeConstant objects.
*/
type VisualScriptBasicTypeConstantImplementer interface {
	Class
}
