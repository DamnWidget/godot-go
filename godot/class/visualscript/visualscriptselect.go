package visualscript

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

func NewVisualScriptSelectFromPointer(ptr gdnative.Pointer) *VisualScriptSelect {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := VisualScriptSelect{}
	obj.SetOwner(owner)

	return &obj

}

/*
Undocumented
*/
type VisualScriptSelect struct {
	VisualScriptNode
}

func (o *VisualScriptSelect) BaseClass() string {
	return "VisualScriptSelect"
}

/*
        Undocumented
	Args: [], Returns: enum.Variant::Type
*/

/*
        Undocumented
	Args: [{ false type int}], Returns: void
*/

func (o *VisualScriptSelect) SetTyped(aType gdnative.Int) {
	log.Println("Calling VisualScriptSelect.SetTyped()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromInt(aType)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("VisualScriptSelect", "set_typed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetOwner(), ptrArguments, retPtr)

}
