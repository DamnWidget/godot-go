package httprequest

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
A node with the ability to send HTTP requests. Uses [HTTPClient] internally. Can be used to make HTTP requests, i.e. download or upload files or web content via HTTP.
*/
type HTTPRequest struct {
	Node
}

func (o *HTTPRequest) BaseClass() string {
	return "HTTPRequest"
}

/*
   Undocumented
*/
func (o *HTTPRequest) X_RedirectRequest(arg0 gdnative.String) {
	log.Println("Calling HTTPRequest.X_RedirectRequest()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(arg0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_redirect_request", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *HTTPRequest) X_RequestDone(arg0 gdnative.Int, arg1 gdnative.Int, arg2 *PoolStringArray, arg3 *PoolByteArray) {
	log.Println("Calling HTTPRequest.X_RequestDone()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 4, 4)
	goArguments[0] = reflect.ValueOf(arg0)
	goArguments[1] = reflect.ValueOf(arg1)
	goArguments[2] = reflect.ValueOf(arg2)
	goArguments[3] = reflect.ValueOf(arg3)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_request_done", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Cancels the current request.
*/
func (o *HTTPRequest) CancelRequest() {
	log.Println("Calling HTTPRequest.CancelRequest()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "cancel_request", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Returns the response body length.
*/
func (o *HTTPRequest) GetBodySize() gdnative.Int {
	log.Println("Calling HTTPRequest.GetBodySize()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_body_size", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *HTTPRequest) GetBodySizeLimit() gdnative.Int {
	log.Println("Calling HTTPRequest.GetBodySizeLimit()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_body_size_limit", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *HTTPRequest) GetDownloadFile() gdnative.String {
	log.Println("Calling HTTPRequest.GetDownloadFile()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_download_file", goArguments, "gdnative.String")

	returnValue := goRet.Interface().(gdnative.String)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Returns the amount of bytes this HTTPRequest downloaded.
*/
func (o *HTTPRequest) GetDownloadedBytes() gdnative.Int {
	log.Println("Calling HTTPRequest.GetDownloadedBytes()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_downloaded_bytes", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Returns the current status of the underlying [HTTPClient]. See [code]STATUS_*[/code] enum on [HTTPClient].
*/
func (o *HTTPRequest) GetHttpClientStatus() gdnative.Int {
	log.Println("Calling HTTPRequest.GetHttpClientStatus()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_http_client_status", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *HTTPRequest) GetMaxRedirects() gdnative.Int {
	log.Println("Calling HTTPRequest.GetMaxRedirects()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_max_redirects", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *HTTPRequest) IsUsingThreads() gdnative.Bool {
	log.Println("Calling HTTPRequest.IsUsingThreads()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "is_using_threads", goArguments, "gdnative.Bool")

	returnValue := goRet.Interface().(gdnative.Bool)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *HTTPRequest) Request(url gdnative.String, customHeaders *PoolStringArray, sslValidateDomain gdnative.Bool, method gdnative.Int, requestData gdnative.String) gdnative.Int {
	log.Println("Calling HTTPRequest.Request()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 5, 5)
	goArguments[0] = reflect.ValueOf(url)
	goArguments[1] = reflect.ValueOf(customHeaders)
	goArguments[2] = reflect.ValueOf(sslValidateDomain)
	goArguments[3] = reflect.ValueOf(method)
	goArguments[4] = reflect.ValueOf(requestData)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "request", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *HTTPRequest) SetBodySizeLimit(bytes gdnative.Int) {
	log.Println("Calling HTTPRequest.SetBodySizeLimit()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(bytes)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_body_size_limit", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *HTTPRequest) SetDownloadFile(path gdnative.String) {
	log.Println("Calling HTTPRequest.SetDownloadFile()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(path)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_download_file", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *HTTPRequest) SetMaxRedirects(amount gdnative.Int) {
	log.Println("Calling HTTPRequest.SetMaxRedirects()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(amount)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_max_redirects", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *HTTPRequest) SetUseThreads(enable gdnative.Bool) {
	log.Println("Calling HTTPRequest.SetUseThreads()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(enable)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_use_threads", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   HTTPRequestImplementer is an interface for HTTPRequest objects.
*/
type HTTPRequestImplementer interface {
	Class
}
