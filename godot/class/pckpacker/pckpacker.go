package pckpacker

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*

 */
type PCKPacker struct {
	Reference
}

func (o *PCKPacker) BaseClass() string {
	return "PCKPacker"
}

/*

 */
func (o *PCKPacker) AddFile(pckPath gdnative.String, sourcePath gdnative.String) gdnative.Int {
	log.Println("Calling PCKPacker.AddFile()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(pckPath)
	goArguments[1] = reflect.ValueOf(sourcePath)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "add_file", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PCKPacker) Flush(verbose gdnative.Bool) gdnative.Int {
	log.Println("Calling PCKPacker.Flush()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(verbose)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "flush", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*

 */
func (o *PCKPacker) PckStart(pckName gdnative.String, alignment gdnative.Int) gdnative.Int {
	log.Println("Calling PCKPacker.PckStart()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 2, 2)
	goArguments[0] = reflect.ValueOf(pckName)
	goArguments[1] = reflect.ValueOf(alignment)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "pck_start", goArguments, "gdnative.Int")

	returnValue := goRet.Interface().(gdnative.Int)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   PCKPackerImplementer is an interface for PCKPacker objects.
*/
type PCKPackerImplementer interface {
	Class
}
