package class

import (
	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewAudioEffectPitchShiftFromPointer(ptr gdnative.Pointer) AudioEffectPitchShift {
func NewAudioEffectPitchShiftFromPointer(ptr gdnative.Pointer) AudioEffectPitchShift {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := AudioEffectPitchShift{}
	obj.SetBaseObject(owner)

	return obj
}

/*
Allows modulation of pitch independently of tempo. All frequencies can be increased/decreased with minimal effect on transients.
*/
type AudioEffectPitchShift struct {
	AudioEffect
	owner gdnative.Object
}

func (o *AudioEffectPitchShift) BaseClass() string {
	return "AudioEffectPitchShift"
}

/*
        Undocumented
	Args: [], Returns: float
*/
func (o *AudioEffectPitchShift) GetPitchScale() gdnative.Float {
	//log.Println("Calling AudioEffectPitchShift.GetPitchScale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("AudioEffectPitchShift", "get_pitch_scale")

	// Call the parent method.
	// float
	retPtr := gdnative.NewEmptyFloat()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := gdnative.NewFloatFromPointer(retPtr)
	//log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false rate float}], Returns: void
*/
func (o *AudioEffectPitchShift) SetPitchScale(rate gdnative.Float) {
	//log.Println("Calling AudioEffectPitchShift.SetPitchScale()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromFloat(rate)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("AudioEffectPitchShift", "set_pitch_scale")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
