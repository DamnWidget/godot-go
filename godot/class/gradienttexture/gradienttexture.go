package gradienttexture

import (
	"log"
	"reflect"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Uses a [Gradient] to fill the texture data, the gradient will be filled from left to right using colors obtained from the gradient, this means that the texture does not necessarily represent an exact copy of the gradient, but instead an interpolation of samples obtained from the gradient at fixed steps (see [method set_width]).
*/
type GradientTexture struct {
	Texture
}

func (o *GradientTexture) BaseClass() string {
	return "GradientTexture"
}

/*
   Undocumented
*/
func (o *GradientTexture) X_Update() {
	log.Println("Calling GradientTexture.X_Update()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "_update", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *GradientTexture) GetGradient() *Gradient {
	log.Println("Calling GradientTexture.GetGradient()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_gradient", goArguments, "*Gradient")

	returnValue := goRet.Interface().(*Gradient)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *GradientTexture) SetGradient(gradient *Gradient) {
	log.Println("Calling GradientTexture.SetGradient()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(gradient)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_gradient", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *GradientTexture) SetWidth(width gdnative.Int) {
	log.Println("Calling GradientTexture.SetWidth()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(width)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_width", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   GradientTextureImplementer is an interface for GradientTexture objects.
*/
type GradientTextureImplementer interface {
	Class
}
