package segmentshape2d

import (
	"log"
	"reflect"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
Segment shape for 2D collisions. Consists of two points, [code]a[/code] and [code]b[/code].
*/
type SegmentShape2D struct {
	Shape2D
}

func (o *SegmentShape2D) BaseClass() string {
	return "SegmentShape2D"
}

/*
   Undocumented
*/
func (o *SegmentShape2D) GetA() *Vector2 {
	log.Println("Calling SegmentShape2D.GetA()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_a", goArguments, "*Vector2")

	returnValue := goRet.Interface().(*Vector2)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *SegmentShape2D) GetB() *Vector2 {
	log.Println("Calling SegmentShape2D.GetB()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 0, 0)

	// Call the parent method.

	goRet := o.callParentMethod(o.BaseClass(), "get_b", goArguments, "*Vector2")

	returnValue := goRet.Interface().(*Vector2)

	log.Println("  Got return value: ", returnValue)
	return returnValue

}

/*
   Undocumented
*/
func (o *SegmentShape2D) SetA(a *Vector2) {
	log.Println("Calling SegmentShape2D.SetA()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(a)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_a", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   Undocumented
*/
func (o *SegmentShape2D) SetB(b *Vector2) {
	log.Println("Calling SegmentShape2D.SetB()")

	// Build out the method's arguments
	goArguments := make([]reflect.Value, 1, 1)
	goArguments[0] = reflect.ValueOf(b)

	// Call the parent method.

	o.callParentMethod(o.BaseClass(), "set_b", goArguments, "")

	log.Println("  Function successfully completed.")

}

/*
   SegmentShape2DImplementer is an interface for SegmentShape2D objects.
*/
type SegmentShape2DImplementer interface {
	Class
}
