package class

import (
	"log"

	"github.com/shadowapex/godot-go/gdnative"
)

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "class.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

//func NewPathFromPointer(ptr gdnative.Pointer) Path {
func NewPathFromPointer(ptr gdnative.Pointer) Path {
	owner := gdnative.NewObjectFromPointer(ptr)
	obj := Path{}
	obj.SetBaseObject(owner)

	return obj
}

/*
This class is a container/Node-ification of a [Curve3D], so it can have [Spatial] properties and [Node] info.
*/
type Path struct {
	Spatial
	owner gdnative.Object
}

func (o *Path) BaseClass() string {
	return "Path"
}

// SetBaseObject will internally set the Godot object inside the struct.
// This is used to call parent methods.
func (o *Path) SetBaseObject(object gdnative.Object) {
	o.owner = object
}

func (o *Path) GetBaseObject() gdnative.Object {
	return o.owner
}

/*
        Undocumented
	Args: [], Returns: void
*/
func (o *Path) X_CurveChanged() {
	log.Println("Calling Path.X_CurveChanged()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Path", "_curve_changed")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}

/*
        Undocumented
	Args: [], Returns: Curve3D
*/
func (o *Path) GetCurve() Curve3D {
	log.Println("Calling Path.GetCurve()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 0, 0)

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Path", "get_curve")

	// Call the parent method.
	// Curve3D
	retPtr := gdnative.NewEmptyObject()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

	// If we have a return type, convert it from a pointer into its actual object.
	ret := NewCurve3DFromPointer(retPtr)
	log.Println("  Got return value: ", ret)
	return ret
}

/*
        Undocumented
	Args: [{ false curve Curve3D}], Returns: void
*/
func (o *Path) SetCurve(curve Curve3D) {
	log.Println("Calling Path.SetCurve()")

	// Build out the method's arguments
	ptrArguments := make([]gdnative.Pointer, 1, 1)
	ptrArguments[0] = gdnative.NewPointerFromObject(curve.GetBaseObject())

	// Get the method bind
	methodBind := gdnative.NewMethodBind("Path", "set_curve")

	// Call the parent method.
	// void
	retPtr := gdnative.NewEmptyVoid()
	gdnative.MethodBindPtrCall(methodBind, o.GetBaseObject(), ptrArguments, retPtr)

}
