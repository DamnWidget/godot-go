package gdnative

/*------------------------------------------------------------------------------
//   This code was generated by a tool.
//
//   Changes to this file may cause incorrect behavior and will be lost if
//   the code is regenerated. Any updates should be done in
//   "types.go.tmpl" so they can be included in the generated
//   code.
//----------------------------------------------------------------------------*/

/*
#include <gdnative/variant.h>
*/
import "C"

type Variant struct {
	base *C.godot_variant
}

func (t *Variant) getBase() *C.godot_variant {
	return t.base
}

type VariantType int

func (e VariantType) getBase() C.godot_variant_type {
	return C.godot_variant_type(e)
}

const (
	VariantTypeNil VariantType = iota

	VariantTypeBool
	VariantTypeInt
	VariantTypeReal
	VariantTypeString

	VariantTypeVector2
	VariantTypeRect2
	VariantTypeVector3
	VariantTypeTransform2D
	VariantTypePlane
	VariantTypeQuat
	VariantTypeAabb
	VariantTypeBasis
	VariantTypeTransform

	VariantTypeColor
	VariantTypeNodePath
	VariantTypeRid
	VariantTypeObject
	VariantTypeDictionary
	VariantTypeArray

	VariantTypePoolByteArray
	VariantTypePoolIntArray
	VariantTypePoolRealArray
	VariantTypePoolStringArray
	VariantTypePoolVector2Array
	VariantTypePoolVector3Array
	VariantTypePoolColorArray
)

type VariantCallErrorError int

func (e VariantCallErrorError) getBase() C.godot_variant_call_error_error {
	return C.godot_variant_call_error_error(e)
}

const (
	CallErrorCallOk VariantCallErrorError = iota
	CallErrorCallErrorInvalidMethod
	CallErrorCallErrorInvalidArgument
	CallErrorCallErrorTooManyArguments
	CallErrorCallErrorTooFewArguments
	CallErrorCallErrorInstanceIsNull
)

type VariantCallError struct {
	base *C.godot_variant_call_error

	Error    VariantCallErrorError
	Argument Int
	Expected VariantType
}

func (t *VariantCallError) getBase() *C.godot_variant_call_error {
	return t.base
}
